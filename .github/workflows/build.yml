name: Build

on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  push:
    branches:
      - 'feature/**'

jobs:
  test:
    runs-on: windows-latest
    name: Testing
    strategy:
      matrix:
        dotnet: [ 'netcoreapp3.1', 'net5.0' ]
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2

      - name: Run tests
        run: dotnet test --verbosity normal -f ${{ matrix.dotnet }}

  build:
    runs-on: windows-latest
    name: Building
    strategy:
      matrix: 
        dotnet: ['netcoreapp3.1', 'net5.0']
    steps:
      - name: Checkout code base
        uses: actions/checkout@v2

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
          
      - name: Cleaning
        run: dotnet clean

      - name: Restore NuGet packages
        run: dotnet restore ExpressionEngine.sln

      - name: Build solution
        run: dotnet build -o build/${{ matrix.dotnet }} -c Release --no-restore -m:1 -f ${{ matrix.dotnet }}
        
      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: build/${{ matrix.dotnet }}
          key: ${{ runner.os }}-build-${{ matrix.dotnet }}
  
  publish:
    runs-on: windows-latest
    name: Generate docs and publish artifacts
    needs: ['build']
    steps:
      - name: Get cache - net5.0
        uses: actions/cache@v2
        with:
          path: build/net5.0
          key: ${{ runner.os }}-build-net5.0

      - name: Get cache - netcoreapp3.1
        uses: actions/cache@v2
        with:
          path: build/netcoreap3.1
          key: ${{ runner.os }}-build-netcoreap3.1
      
      - run: dir

      - run: dir build

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
  
      - name: Install Xml to Markdown tool
        run: dotnet new tool-manifest && dotnet tool install EAVFW.Extensions.Docs.TransformToMarkdown
        
      - name: Generate docs
        run: dotnet tool run tomd --input build/net5.0/ExpressionEngine.xml --output Documentation.md

      - name: Archive build to artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: build
          path: |
            build/netcoreapp3.1/
            build/net5.0/
            Documentation.md
          retention-days: 5
